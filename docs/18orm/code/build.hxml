-cmd echo "  ├─┬ Start building targets"


# https://api.haxe.org/sys/db/Sqlite.html
# Available on php, neko, cpp, java, lua, python, hl
# Opens a new SQLite connection on the specified path.

# (cs) You will need a SQLite ADO.NET Provider (see http://www.mono-project.com/docs/database-access/providers/sqlite/). Also note that this will try to open an assembly named Mono.Data.Sqlite if it wasn't loaded yet.

# (java) You will need a SQLite JDBC driver (e.g. https://bitbucket.org/xerial/sqlite-jdbc).

# Not implemented for this platform
# -cmd echo "  │ ├── node"
# -cmd haxe build_node.hxml

# -cmd echo "  │ ├── python"
# -cmd haxe build_python.hxml
# -cmd echo "  │ ├── lua"
# -cmd haxe build_lua.hxml

-cmd echo "  │ ├── neko"
-cmd haxe build_neko.hxml
-cmd echo "  │ ├── cpp"
-cmd haxe build_cpp.hxml

# (cs) You will need a SQLite ADO.NET Provider (see http://www.mono-project.com/docs/database-access/providers/sqlite/). Also note that this will try to open an assembly named Mono.Data.Sqlite if it wasn't loaded yet.
# -cmd echo "  │ ├── cs"
# -cmd haxe build_cs.hxml

# (java) You will need a SQLite JDBC driver (e.g. https://bitbucket.org/xerial/sqlite-jdbc).
-cmd echo "  │ ├── java"
-cmd haxe build_java.hxml
-cmd echo "  │ ├── jvm"
-cmd haxe build_jvm.hxml

# Not implemented for this platform
# -cmd echo "  │ ├── interp (Eval)"
# -cmd haxe build_interp.hxml

-cmd echo "  └── Finished building targets"